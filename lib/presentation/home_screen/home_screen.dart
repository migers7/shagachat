import '../home_screen/widgets/listmeli_one_item_widget.dart';import '../home_screen/widgets/listmihan_one_item_widget.dart';import 'controller/home_controller.dart';import 'models/listmeli_one_item_model.dart';import 'models/listmihan_one_item_model.dart';import 'package:flutter/material.dart';import 'package:shaga_chat/core/app_export.dart';import 'package:shaga_chat/widgets/app_bar/appbar_image_1.dart';import 'package:shaga_chat/widgets/app_bar/appbar_image_2.dart';import 'package:shaga_chat/widgets/app_bar/appbar_subtitle_1.dart';import 'package:shaga_chat/widgets/app_bar/appbar_subtitle_2.dart';import 'package:shaga_chat/widgets/app_bar/appbar_subtitle_3.dart';import 'package:shaga_chat/widgets/app_bar/custom_app_bar.dart';import 'package:shaga_chat/widgets/custom_elevated_button.dart';class HomeScreen extends GetWidget<HomeController> {const HomeScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.gray20002, appBar: CustomAppBar(height: 26.v, title: Padding(padding: EdgeInsets.only(left: 46.h), child: Column(children: [Padding(padding: EdgeInsets.only(left: 1.h, right: 4.h), child: Row(children: [AppbarImage1(svgPath: ImageConstant.imgHome), AppbarImage1(svgPath: ImageConstant.imgCar, margin: EdgeInsets.only(left: 50.h)), AppbarImage1(svgPath: ImageConstant.imgFluentmdl2contact, margin: EdgeInsets.only(left: 58.h, bottom: 5.v))])), SizedBox(height: 3.v), Row(children: [AppbarSubtitle3(text: "lbl_home".tr), AppbarSubtitle2(text: "lbl_chatroom".tr, margin: EdgeInsets.only(left: 36.h, bottom: 1.v), onTap: () {widget();}), AppbarSubtitle2(text: "lbl_friend".tr, margin: EdgeInsets.only(left: 41.h, top: 1.v))])])), actions: [Padding(padding: EdgeInsets.symmetric(horizontal: 44.h), child: Column(children: [Padding(padding: EdgeInsets.only(left: 7.h, right: 1.h), child: Row(children: [AppbarImage2(svgPath: ImageConstant.imgVolume), AppbarImage2(svgPath: ImageConstant.imgUser, margin: EdgeInsets.only(left: 49.h))])), SizedBox(height: 3.v), Row(children: [AppbarSubtitle1(text: "lbl_dompet".tr, margin: EdgeInsets.only(top: 1.v)), AppbarSubtitle1(text: "lbl_profile".tr, margin: EdgeInsets.only(left: 41.h, bottom: 1.v))])]))]), body: SizedBox(height: 847.v, width: double.maxFinite, child: Stack(alignment: Alignment.topLeft, children: [Align(alignment: Alignment.center, child: SizedBox(height: 792.v, width: 406.h, child: Stack(alignment: Alignment.bottomCenter, children: [SizedBox(width: double.maxFinite, child: Align(alignment: Alignment.topCenter, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(right: 10.h), child: Row(mainAxisAlignment: MainAxisAlignment.end, crossAxisAlignment: CrossAxisAlignment.start, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 1.h), child: Text("lbl_shaga".tr, style: CustomTextStyles.labelLargeUrbanist)), SizedBox(height: 2.v), CustomImageView(imagePath: ImageConstant.imgIcon, height: 16.v, width: 40.h)]), Container(height: 18.v, width: 180.h, margin: EdgeInsets.only(left: 56.h, bottom: 13.v), child: Stack(alignment: Alignment.topLeft, children: [Align(alignment: Alignment.topRight, child: Container(height: 9.v, width: 154.h, margin: EdgeInsets.only(top: 4.v), decoration: BoxDecoration(color: theme.colorScheme.onErrorContainer, borderRadius: BorderRadius.circular(4.h)))), Align(alignment: Alignment.topLeft, child: Container(height: 9.v, width: 107.h, margin: EdgeInsets.only(top: 4.v), decoration: BoxDecoration(color: appTheme.amber500, borderRadius: BorderRadius.circular(4.h)))), Align(alignment: Alignment.topRight, child: Padding(padding: EdgeInsets.only(right: 5.h), child: Text("lbl_lv40".tr, style: theme.textTheme.bodySmall))), Align(alignment: Alignment.bottomLeft, child: Padding(padding: EdgeInsets.only(left: 15.h), child: Text("lbl_lv39".tr, style: theme.textTheme.bodySmall)))]))])), Container(height: 60.v, width: 405.h, margin: EdgeInsets.only(top: 54.v, right: 1.h), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.bottomLeft, child: Padding(padding: EdgeInsets.only(bottom: 21.v), child: SizedBox(width: 371.h, child: Divider(color: appTheme.gray300, indent: 11.h)))), CustomElevatedButton(height: 60.v, width: 405.h, text: "lbl_baner_event".tr, buttonStyle: CustomButtonStyles.none, decoration: CustomButtonStyles.gradientPrimaryToIndigoADecoration, buttonTextStyle: CustomTextStyles.titleLargeInikaOnPrimary, onTap: () {openDatePickerDialog();}, alignment: Alignment.center)])), Expanded(child: SizedBox(height: 154.v, child: Obx(() => ListView.separated(padding: EdgeInsets.only(top: 16.v, right: 1.h), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 53.h);}, itemCount: controller.homeModelObj.value.listmeliOneItemList.value.length, itemBuilder: (context, index) {ListmeliOneItemModel model = controller.homeModelObj.value.listmeliOneItemList.value[index]; return ListmeliOneItemWidget(model);})))), SizedBox(height: 10.v), Row(mainAxisAlignment: MainAxisAlignment.end, children: [SizedBox(height: 138.v, width: 100.h, child: Stack(alignment: Alignment.topCenter, children: [CustomImageView(imagePath: ImageConstant.imgImage2, height: 138.v, width: 100.h, radius: BorderRadius.circular(7.h), alignment: Alignment.center), Align(alignment: Alignment.topCenter, child: Padding(padding: EdgeInsets.only(left: 9.h, top: 6.v, right: 5.h), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.end, children: [Container(height: 16.adaptSize, width: 16.adaptSize, decoration: BoxDecoration(color: theme.colorScheme.primaryContainer, borderRadius: BorderRadius.circular(8.h))), Container(width: 82.h, margin: EdgeInsets.only(top: 84.v, right: 2.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 3.v, bottom: 2.v), child: Text("lbl_putri".tr, style: theme.textTheme.labelLarge)), CustomImageView(svgPath: ImageConstant.imgEmojionev1fla, height: 20.adaptSize, width: 20.adaptSize)]))])))])), Spacer(flex: 58), CustomImageView(svgPath: ImageConstant.imgEmojionev1flaGray200, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.only(top: 90.v, bottom: 27.v)), Spacer(flex: 41), SizedBox(height: 138.v, width: 100.h, child: Stack(alignment: Alignment.centerLeft, children: [CustomImageView(imagePath: ImageConstant.imgImage2, height: 138.v, width: 100.h, radius: BorderRadius.circular(7.h), alignment: Alignment.center), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 3.h), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.centerRight, child: Container(height: 16.adaptSize, width: 16.adaptSize, decoration: BoxDecoration(color: theme.colorScheme.primaryContainer, borderRadius: BorderRadius.circular(8.h)))), SizedBox(height: 87.v), Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(bottom: 6.v), child: Text("lbl_mella".tr, style: theme.textTheme.labelLarge)), CustomImageView(svgPath: ImageConstant.imgEmojionev1fla, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.only(left: 24.h))])])))]))])]))), Align(alignment: Alignment.bottomCenter, child: Padding(padding: EdgeInsets.only(right: 3.h), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.center, child: SizedBox(height: 138.v, width: 100.h, child: Stack(alignment: Alignment.bottomLeft, children: [CustomImageView(imagePath: ImageConstant.imgImage2, height: 138.v, width: 100.h, radius: BorderRadius.circular(7.h), alignment: Alignment.center), Align(alignment: Alignment.bottomLeft, child: Padding(padding: EdgeInsets.only(left: 19.h), child: Text("lbl_bella".tr, style: theme.textTheme.labelLarge)))]))), Container(height: 15.v, width: 379.h, margin: EdgeInsets.only(left: 1.h, top: 19.v), child: Stack(alignment: Alignment.centerLeft, children: [Align(alignment: Alignment.topRight, child: SizedBox(width: 360.h, child: Divider(color: appTheme.gray300))), Align(alignment: Alignment.centerLeft, child: Text("lbl_offline".tr, style: theme.textTheme.bodySmall))])), SizedBox(height: 9.v), SizedBox(height: 138.v, child: Obx(() => ListView.separated(scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 54.h);}, itemCount: controller.homeModelObj.value.listmihanOneItemList.value.length, itemBuilder: (context, index) {ListmihanOneItemModel model = controller.homeModelObj.value.listmihanOneItemList.value[index]; return ListmihanOneItemWidget(model, navigateToprofile: () {navigateToprofile();});}))), Padding(padding: EdgeInsets.only(left: 1.h, top: 19.v), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [SizedBox(height: 138.v, width: 100.h, child: Stack(alignment: Alignment.bottomLeft, children: [CustomImageView(imagePath: ImageConstant.imgImage2, height: 138.v, width: 100.h, radius: BorderRadius.circular(7.h), alignment: Alignment.center), Align(alignment: Alignment.bottomLeft, child: Padding(padding: EdgeInsets.only(left: 13.h, bottom: 17.v), child: Text("lbl_mihan".tr, style: CustomTextStyles.labelLargeOnPrimary)))])), CustomImageView(imagePath: ImageConstant.imgImage2, height: 138.v, width: 100.h, radius: BorderRadius.circular(7.h)), CustomImageView(imagePath: ImageConstant.imgImage2, height: 138.v, width: 100.h, radius: BorderRadius.circular(7.h))]))])))]))), Align(alignment: Alignment.topLeft, child: Container(height: 80.adaptSize, width: 80.adaptSize, margin: EdgeInsets.only(left: 19.h, top: 3.v))), Align(alignment: Alignment.bottomCenter, child: Container(height: 90.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimary, borderRadius: BorderRadius.vertical(top: Radius.circular(16.h)))))])))); } 
/// Navigates to the profileOneTabContainerScreen when the action is triggered.
/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the profileOneTabContainerScreen.
navigateToprofile() { Get.toNamed(AppRoutes.profileOneTabContainerScreen); } 
/// Navigates to the chatroomTabContainerScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the chatroomTabContainerScreen.
widget() { Get.offNamed(AppRoutes.chatroomTabContainerScreen,); } 

/// Displays a date picker dialog to update the selected date
///
/// This function returns a `Future` that completes with `void`.
Future<void> openDatePickerDialog() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.selectedopenDatePickerDialogDate , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.selectedopenDatePickerDialogDate = dateTime;} } 
 }
