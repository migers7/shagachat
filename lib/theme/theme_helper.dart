import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors(),
    'secondary': SecondaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme,
    'secondary': ColorSchemes.secondaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimary,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.cyan700,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.gray20001,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray20001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray90003,
          fontSize: 16.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray500,
          fontSize: 14.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 48.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 32.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray90003,
          fontSize: 24.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 10.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray90003,
          fontSize: 20.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray90003,
          fontSize: 18.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray700,
          fontSize: 14.fSize,
          fontFamily: 'Urbanist',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF7210EE),
    primaryContainer: Color(0XFF05FC00),
    secondary: Color(0XFF05FC00),
    secondaryContainer: Color(0XFF7210EE),
    tertiary: Color(0XFF05FC00),
    tertiaryContainer: Color(0XFF7210EE),

    // Background colors
    background: Color(0XFF05FC00),

    // Surface colors
    surface: Color(0XFF05FC00),
    surfaceTint: Color(0XFFFFFFFF),
    surfaceVariant: Color(0XFF7210EE),

    // Error colors
    error: Color(0XFFFFFFFF),
    errorContainer: Color(0XFF0D51B6),
    onError: Color(0XFF5710EE),
    onErrorContainer: Color(0XFF0F0116),

    // On colors(text colors)
    onBackground: Color(0XFF320AA7),
    onInverseSurface: Color(0XFF5710EE),
    onPrimary: Color(0XFFFFFFFF),
    onPrimaryContainer: Color(0XFF320AA7),
    onSecondary: Color(0XFF320AA7),
    onSecondaryContainer: Color(0XFFFFFFFF),
    onTertiary: Color(0XFF320AA7),
    onTertiaryContainer: Color(0XFFFFFFFF),

    // Other colors
    outline: Color(0XFFFFFFFF),
    outlineVariant: Color(0XFF05FC00),
    scrim: Color(0XFF05FC00),
    shadow: Color(0XFFFFFFFF),

    // Inverse colors
    inversePrimary: Color(0XFF05FC00),
    inverseSurface: Color(0XFFFFFFFF),

    // Pending colors
    onSurface: Color(0XFF320AA7),
    onSurfaceVariant: Color(0XFFFFFFFF),
  );

  static final secondaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF7210EE),
    primaryContainer: Color(0XFF05FC00),
    secondary: Color(0XFF05FC00),
    secondaryContainer: Color(0XFF7210EE),
    tertiary: Color(0XFF05FC00),
    tertiaryContainer: Color(0XFF7210EE),

    // Background colors
    background: Color(0XFF05FC00),

    // Surface colors
    surface: Color(0XFF05FC00),
    surfaceTint: Color(0XFFFFFFFF),
    surfaceVariant: Color(0XFF7210EE),

    // Error colors
    error: Color(0XFFFFFFFF),
    errorContainer: Color(0XFF0D51B6),
    onError: Color(0XFF5710EE),
    onErrorContainer: Color(0XFF0F0116),

    // On colors(text colors)
    onBackground: Color(0XFF320AA7),
    onInverseSurface: Color(0XFF5710EE),
    onPrimary: Color(0XFFFFFFFF),
    onPrimaryContainer: Color(0XFF320AA7),
    onSecondary: Color(0XFF320AA7),
    onSecondaryContainer: Color(0XFFFFFFFF),
    onTertiary: Color(0XFF320AA7),
    onTertiaryContainer: Color(0XFFFFFFFF),

    // Other colors
    outline: Color(0XFFFFFFFF),
    outlineVariant: Color(0XFF05FC00),
    scrim: Color(0XFF05FC00),
    shadow: Color(0XFFFFFFFF),

    // Inverse colors
    inversePrimary: Color(0XFF05FC00),
    inverseSurface: Color(0XFFFFFFFF),

    // Pending colors
    onSurface: Color(0XFF320AA7),
    onSurfaceVariant: Color(0XFFFFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500 => Color(0XFFF3BE04);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue700 => Color(0XFF095FE1);
  Color get blue800 => Color(0XFF1B75BB);
  Color get blue80001 => Color(0XFF1962A6);
  Color get blueA400 => Color(0XFF1877F2);
  Color get blueA40001 => Color(0XFF0B7BFF);
  Color get blueA700 => Color(0XFF176DFF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD8D8D8);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF888888);

  // Cyan
  Color get cyan700 => Color(0XFF0AA798);

  // DeepOrange
  Color get deepOrange50 => Color(0XFFFFEDE5);
  Color get deepOrange600 => Color(0XFFF24E1E);
  Color get deepOrangeA400 => Color(0XFFFF4C00);
  Color get deepOrangeA40001 => Color(0XFFFF4D00);

  // DeepPurple
  Color get deepPurple50 => Color(0XFFEEE2FF);
  Color get deepPurple700 => Color(0XFF491BCC);
  Color get deepPurple800 => Color(0XFF372EA6);
  Color get deepPurpleA400 => Color(0XFF640FFF);
  Color get deepPurpleA40001 => Color(0XFF660DFF);
  Color get deepPurpleA700 => Color(0XFF4A10EE);
  Color get deepPurpleA70001 => Color(0XFF2F10EE);
  Color get deepPurpleA70002 => Color(0XFF7000FF);

  // Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFE6E7E8);
  Color get gray20001 => Color(0XFFEEEEEE);
  Color get gray20002 => Color(0XFFF4EDED);
  Color get gray300 => Color(0XFFDDDDDD);
  Color get gray30001 => Color(0XFFE0E0E0);
  Color get gray400 => Color(0XFFBDBDBD);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFF9E9E9E);
  Color get gray600 => Color(0XFF757575);
  Color get gray60001 => Color(0XFF777777);
  Color get gray700 => Color(0XFF616161);
  Color get gray70001 => Color(0XFF545454);
  Color get gray800 => Color(0XFF424242);
  Color get gray900 => Color(0XFF09101D);
  Color get gray90001 => Color(0XFF130F26);
  Color get gray90002 => Color(0XFF181A20);
  Color get gray90003 => Color(0XFF212121);

  // Green
  Color get green900 => Color(0XFF137A08);

  // Indigo
  Color get indigo700 => Color(0XFF24559E);
  Color get indigoA700 => Color(0XFF1041EE);

  // LightBlue
  Color get lightBlue500 => Color(0XFF0BA7FF);
  Color get lightBlueA700 => Color(0XFF0B89FF);

  // Orange
  Color get orange600 => Color(0XFFFF890B);

  // Purple
  Color get purple700 => Color(0XFF7421B5);
  Color get purple70001 => Color(0XFF740AA7);
  Color get purpleA700 => Color(0XFF8E00FF);

  // Red
  Color get red400 => Color(0XFFC75046);
  Color get red500 => Color(0XFFF54336);
  Color get red50001 => Color(0XFFEB4335);
  Color get red700 => Color(0XFFEC1C24);
  Color get redA200 => Color(0XFFF75555);
  Color get redA20014 => Color(0X14FF4D67);

  // Yellow
  Color get yellow700 => Color(0XFFF9C23C);
}

/// Class containing custom colors for a secondary theme.
class SecondaryColors extends PrimaryColors {
  // Amber
  Color get amber500 => Color(0XFFF3BE04);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue700 => Color(0XFF095FE1);
  Color get blue800 => Color(0XFF1B75BB);
  Color get blue80001 => Color(0XFF1962A6);
  Color get blueA400 => Color(0XFF1877F2);
  Color get blueA40001 => Color(0XFF0B7BFF);
  Color get blueA700 => Color(0XFF176DFF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD8D8D8);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF888888);

  // Cyan
  Color get cyan700 => Color(0XFF0AA798);

  // DeepOrange
  Color get deepOrange50 => Color(0XFFFFEDE5);
  Color get deepOrange600 => Color(0XFFF24E1E);
  Color get deepOrangeA400 => Color(0XFFFF4C00);
  Color get deepOrangeA40001 => Color(0XFFFF4D00);

  // DeepPurple
  Color get deepPurple50 => Color(0XFFEEE2FF);
  Color get deepPurple700 => Color(0XFF491BCC);
  Color get deepPurple800 => Color(0XFF372EA6);
  Color get deepPurpleA400 => Color(0XFF640FFF);
  Color get deepPurpleA40001 => Color(0XFF660DFF);
  Color get deepPurpleA700 => Color(0XFF4A10EE);
  Color get deepPurpleA70001 => Color(0XFF2F10EE);
  Color get deepPurpleA70002 => Color(0XFF7000FF);

  // Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFE6E7E8);
  Color get gray20001 => Color(0XFFEEEEEE);
  Color get gray20002 => Color(0XFFF4EDED);
  Color get gray300 => Color(0XFFDDDDDD);
  Color get gray30001 => Color(0XFFE0E0E0);
  Color get gray400 => Color(0XFFBDBDBD);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFF9E9E9E);
  Color get gray600 => Color(0XFF757575);
  Color get gray60001 => Color(0XFF777777);
  Color get gray700 => Color(0XFF616161);
  Color get gray70001 => Color(0XFF545454);
  Color get gray800 => Color(0XFF424242);
  Color get gray900 => Color(0XFF09101D);
  Color get gray90001 => Color(0XFF130F26);
  Color get gray90002 => Color(0XFF181A20);
  Color get gray90003 => Color(0XFF212121);

  // Green
  Color get green900 => Color(0XFF137A08);

  // Indigo
  Color get indigo700 => Color(0XFF24559E);
  Color get indigoA700 => Color(0XFF1041EE);

  // LightBlue
  Color get lightBlue500 => Color(0XFF0BA7FF);
  Color get lightBlueA700 => Color(0XFF0B89FF);

  // Orange
  Color get orange600 => Color(0XFFFF890B);

  // Purple
  Color get purple700 => Color(0XFF7421B5);
  Color get purple70001 => Color(0XFF740AA7);
  Color get purpleA700 => Color(0XFF8E00FF);

  // Red
  Color get red400 => Color(0XFFC75046);
  Color get red500 => Color(0XFFF54336);
  Color get red50001 => Color(0XFFEB4335);
  Color get red700 => Color(0XFFEC1C24);
  Color get redA200 => Color(0XFFF75555);
  Color get redA20014 => Color(0X14FF4D67);

  // Yellow
  Color get yellow700 => Color(0XFFF9C23C);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
